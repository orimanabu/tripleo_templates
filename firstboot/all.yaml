heat_template_version: 2014-10-16

resources:
  userdata:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: all_config}

  all_config:
    type: OS::Heat::SoftwareConfig
    properties:
      config: |
        #!/bin/bash
        swap_device=$(sudo fdisk -l | grep swap | awk '{print $1}')
        if [[ $swap_device && ${swap_device} ]]; then
             rc_local="/etc/rc.d/rc.local"
             echo "swapon $swap_device " >> $rc_local
             chmod 755 $rc_local
             swapon $swap_device
        fi

        ## user ori
        useradd ori
        echo 'ori:orimanabu' | chpasswd
        echo "ori ALL=(root) NOPASSWD:ALL" > /etc/sudoers.d/ori
        chmod 440 /etc/sudoers.d/ori

        ## root password
        echo redhat | sudo passwd root --stdin

        # permit root login over SSH
        sed -i -e 's/.*ssh-rsa/ssh-rsa/' /root/.ssh/authorized_keys
        sed -i.orig -e 's/PasswordAuthentication.*/PasswordAuthentication yes/g' /etc/ssh/sshd_config
        sed -i -e 's/ChallengeResponseAuthentication.*/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
        sed -i -e 's/^#\(UseDNS .*$\)/UseDNS no/' /etc/ssh/sshd_config
        systemctl restart sshd

        # timezone
        #timedatectl set-timezone Asia/Tokyo

        # ceph
        case "$(hostname)" in
          *ceph*)
            echo "XXX $(hostname)" >> /root/firstboot.log
            #devprefix=sd
            devprefix=vd
            for i in {b,c,d,e,f,g,n,o}; do
              dev="/dev/${devprefix}${i}"
              if [ -b ${dev} ]; then
                echo "XXX ${dev}" >> /root/firstboot.log
                echo "(II) Wiping disk ${dev}..."
                sgdisk -Z ${dev}
                sgdisk -g ${dev}
              fi
            done
          ;;
        esac

        # create tail.sh
        echo "journalctl -fl | grep -Ev '((proxy|account|object|container)-server|haproxy|to rabbitmq|[Ss]ession.*rabbitmq|cinder-rootwrap|snmpd)'" > /root/tail.sh
        chmod +x /root/tail.sh

outputs:
  OS::stack_id:
    value: {get_resource: userdata}

